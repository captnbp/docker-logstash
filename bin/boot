#!/bin/bash

# Fail fast, including pipelines
set -eo pipefail

# Set LOGSTASH_TRACE to enable debugging
[[ $LOGSTASH_TRACE ]] && set -x

LOGSTASH_CONFIG_DIR="/data/"
LOGSTASH_CONFIG_FILE="${LOGSTASH_CONFIG_DIR}logstash.conf"

# Download default conf if none present
if [ ! -f $LOGSTASH_CONFIG_FILE ]; then

    echo "Setting up default configuration file ..."
    cp /app/logstash.conf.dist $LOGSTASH_CONFIG_FILE
    cp -a /app/patterns ${LOGSTASH_CONFIG_DIR}
fi

# This magic will replace ES_HOST and ES_PORT in your logstash.conf
# file if they exist with the IP and port dynamically generated
# by docker. Take a look at the readme for more details.
#
# Note: Don't use this on a file mounting using a docker
# volume, as the inode switch will cause `device or resource busy`
# Instead download your file as normal
sed -e "s/host => \".*\"/host => \"${ES_PORT_9200_TCP_ADDR}\"/g" -i $LOGSTASH_CONFIG_FILE


# Default path for SSL certificates
SSL_CERT_PATH="/opt/ssl"

# The default logstash-forwarder keys are insecure. Please do not
# use them in production. Set the LF_SSL_CERT_KEY_URL and LF_SSL_CERT_URL
# env vars to use your secure keys.
LF_SSL_CERT_KEY_URL=${LF_SSL_CERT_KEY_URL:-"https://gist.github.com/pblittle/8994708/raw/insecure-logstash-forwarder.key"}
LF_SSL_CERT_URL=${LF_SSL_CERT_URL:-"https://gist.github.com/pblittle/8994726/raw/insecure-logstash-forwarder.crt"}

# Your keys will be renamed to logstash-forwarder
LF_SSL_CERT_KEY_FILE="${SSL_CERT_PATH}/logstash-forwarder.key"
LF_SSL_CERT_FILE="${SSL_CERT_PATH}/logstash-forwarder.crt"

mkdir -p $SSL_CERT_PATH

# Download logstash-forwarder key and certificate
wget $LF_SSL_CERT_URL -O $LF_SSL_CERT_FILE
wget $LF_SSL_CERT_KEY_URL -O $LF_SSL_CERT_KEY_FILE

# Fire up logstash!
exec /opt/logstash/bin/logstash \
    agent \
    --config $LOGSTASH_CONFIG_FILE \
    -- \
    web
